CICLO IF.

De no ser por las estructuras de control, el código
en cualquier lenguaje de programación sería 
ejecutado secuencialmente hasta terminar. 
Un código, no deja de ser un conjunto de 
instrucciones que son ejecutadas unas tras otra. 
Gracias a las estructuras de control, podemos 
cambiar el flujo de ejecución de un programa, 
haciendo que ciertos bloques de código se ejecuten
si y solo si se dan unas condiciones particulares.

Para los condicionales se usan: 
OPERADORES ARITMÉTICOS.
OPERADORES LÓGICOS.
OPERADORES INCREMENTO Y DECREMENTO.

Empecemos con los aritméticos.
Operador  | Descripción        | Ejemplo      | Mostrar  |
    +     |    Suma            | a = 2 + 1    |    3     |
    -     |    Resta           | a = 10 - 4   |    6     |
    -     |    Negación        | a = -8       |   -8     |
    *     |    Multiplicación  | a = 2 * 8    |   16     |
    **    |    Potenciación    | a = 4 ** 4   |   256    |
    /     |    División        | a = 6.5 / 2  |   3.25   | 
    //    |    División Entera | a = 8.8 // 3 |   2.0    |
    ^     |    Exponente       | a = 5 ^ 4    |    1     |
    %     |    Módulo          | a = 15 % 3   |    0     |
    **=   |    Cuadrado        | a = 3 a**=2  |    9     |

Ahora conoceremos los Lógicos.
Operador  | Descripción      | Ejemplo              | Mostrar  |
    ==    |    Son iguales   | a = 5 == 3           |    False |
    !=    | Distinto o igual | a = 10 != 4          |    True  |
    <     |    Menor         | a = 5 < 2            |    False |
    >     |    Mayor         | a = 2 > 1            |    True  |
    <=    |    Menor o igual | a = 10 <= 4          |    False |
    >=    |    Mayor o igual | a = 9 >= 4           |    True  |
    and   | Ambas son True   | (5 < 10) and  (6 < 2)|   True   |
    or    | Una debe ser True| (5 > 10) or   (6 < 2)|   False  |
    not   |Convierte T a Fal | v = True x = not v   |   False  |  

Ahora conoceremos los incremento y decremento.
Operador  | Descripción | Ejemplo   | Desglosando |  Mostrar |
    ++    | Incremento  |  i=4  i++ |  i = i + 1  |    5     | 
    --    | Decremento  |  i=2  i-- |  i = i - 1  |    1     |
    +=    | Incremento  |  i=2 i+=1 |  i = i + 1  |    3     |
Los incremento y decremento también los puedes utilizar utilizando
los operadores artiméticos ej:b +=1.

Algo que no es tan recomendable para el usuario programar es un ciclo if
de manera tenario, en una sola línea de código asi:

 if z > 4: print("Es mayor")

Si el código que posees tiene más de una línea puedes separarlos utilizando ; así:
if z > 4: print("Es mayor a 4"); print("Dentro del if")